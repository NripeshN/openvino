# -*- coding: utf-8 -*-
# Copyright (C) 2018-2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

from openvino.runtime.opset1.ops import absolute
from openvino.runtime.opset1.ops import absolute as abs
from openvino.runtime.opset1.ops import (
    acos,
    add,
    asin,
    atan,
    avg_pool,
    batch_norm_inference,
    binary_convolution,
)
from openvino.runtime.opset1.ops import ceiling
from openvino.runtime.opset1.ops import ceiling as ceil
from openvino.runtime.opset1.ops import (
    clamp,
    concat,
    constant,
    convert,
    convert_like,
    convolution,
    convolution_backprop_data,
    cos,
    cosh,
    ctc_greedy_decoder,
    deformable_convolution,
    deformable_psroi_pooling,
    depth_to_space,
    detection_output,
    divide,
    elu,
    equal,
    erf,
    exp,
    fake_quantize,
    floor,
    floor_mod,
    gather,
    gather_tree,
    greater,
    greater_equal,
    grn,
    group_convolution,
    group_convolution_backprop_data,
    hard_sigmoid,
    interpolate,
    less,
    less_equal,
    log,
    logical_and,
    logical_not,
    logical_or,
    logical_xor,
    lrn,
    lstm_cell,
    lstm_sequence,
    matmul,
    max_pool,
    maximum,
    minimum,
    mod,
    multiply,
    negative,
    normalize_l2,
    not_equal,
    one_hot,
    pad,
    parameter,
    power,
    prelu,
    prior_box,
    prior_box_clustered,
    proposal,
    psroi_pooling,
    range,
    reduce_logical_and,
    reduce_logical_or,
    reduce_max,
    reduce_mean,
    reduce_min,
    reduce_prod,
    reduce_sum,
    region_yolo,
    relu,
    reshape,
    result,
    reverse_sequence,
    select,
    selu,
    sigmoid,
    sign,
    sin,
    sinh,
    softmax,
    space_to_depth,
    split,
    sqrt,
    squared_difference,
    squeeze,
    strided_slice,
    subtract,
    tan,
    tanh,
    tensor_iterator,
    tile,
    transpose,
    unsqueeze,
    variadic_split,
)
from openvino.runtime.opset2.ops import (
    batch_to_space,
    gelu,
    mvn,
    reorg_yolo,
    roi_pooling,
    space_to_batch,
)
from openvino.runtime.opset3.ops import assign, broadcast, bucketize
from openvino.runtime.opset3.ops import cum_sum
from openvino.runtime.opset3.ops import cum_sum as cumsum
from openvino.runtime.opset3.ops import (
    embedding_bag_offsets_sum,
    embedding_bag_packed_sum,
    embedding_segments_sum,
    extract_image_patches,
    gru_cell,
    non_max_suppression,
    non_zero,
    read_value,
    rnn_cell,
    roi_align,
    scatter_elements_update,
    scatter_update,
    shape_of,
    shuffle_channels,
    topk,
)
